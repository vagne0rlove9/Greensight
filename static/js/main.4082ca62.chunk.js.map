{"version":3,"sources":["containers/Layout/Layout.js","components/Delivery/Delivery.js","components/Pickup/Pickup.js","containers/HomePage/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Layout","className","this","props","children","Component","Delivery","useState","name","setName","phone","setPhone","address","setAddress","comment","setComment","errorName","setErrorName","errorPhone","setErrorPhone","errorAddress","setErrorAddress","errorComment","setErrorComment","isValid","disabled","setDisabled","buttonRef","useRef","nameClass","setNameClass","phoneClass","setPhoneClass","addressClass","setAddressClass","htmlFor","id","onChange","event","target","value","placeholder","mask","rows","onClick","match","push","includes","current","style","setTimeout","alert","type","ref","Pickup","mx","zoom","coordinates","sumX","sumY","i","length","mapData","center","flag","map","c","document","body","clientWidth","Math","abs","choice","setChoice","error","setError","width","height","defaultState","coordinate","geometry","properties","hintContent","iconCaption","options","iconLayout","iconImageHref","iconImageSize","iconImageOffset","Home","deliveryClass","setDeliveryClass","pickupClass","setPickupClass","App","exact","path","component","displayName","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4082ca62.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Layout.css'\r\n\r\nexport class Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main-container\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport './Delivery.css'\r\n\r\nfunction Delivery() {\r\n    const [name, setName] = useState(null);\r\n    const [phone, setPhone] = useState(null);\r\n    const [address, setAddress] = useState(null);\r\n    const [comment, setComment] = useState(null);\r\n    const [errorName, setErrorName] = useState(false);\r\n    const [errorPhone, setErrorPhone] = useState(false);\r\n    const [errorAddress, setErrorAddress] = useState(false);\r\n    const [errorComment, setErrorComment] = useState(false);\r\n    let isValid = [];\r\n    const [disabled, setDisabled] = useState(false);\r\n    const buttonRef = useRef(null);\r\n    const [nameClass, setNameClass] = useState(\"input\");\r\n    const [phoneClass, setPhoneClass] = useState(\"input\");\r\n    const [addressClass, setAddressClass] = useState(\"input\");\r\n    const handleClickSubmit = (event) => {\r\n        isValid = [];\r\n        if ((name !== null) && (name.match(/^[а-яА-Я-]+[а-яА-Я\\s-]+[а-яА-Я-]$/) !== null)) {\r\n            isValid.push(true);\r\n            setErrorName(false);\r\n            setNameClass(\"input\");\r\n        }\r\n        else {\r\n            isValid.push(false);\r\n            setErrorName(true);\r\n            setNameClass(\"input-error\");\r\n        }\r\n        if ((phone !== null) && (phone.match(/\\+7+\\([0-9]{3}\\)+\\s+[0-9]{3}-[0-9]{2}-[0-9]{2}$/) !== null)) {\r\n            isValid.push(true);\r\n            setErrorPhone(false);\r\n            setPhoneClass(\"input\");\r\n        }\r\n        else {\r\n            isValid.push(false);\r\n            setErrorPhone(true);\r\n            setPhoneClass(\"input-error\");\r\n        }\r\n        if ((address !== null) && (address !== \"\")) {\r\n            isValid.push(true);\r\n            setErrorAddress(false);\r\n            setAddressClass(\"input\");\r\n        }\r\n        else {\r\n            isValid.push(false);\r\n            setErrorAddress(true);\r\n            setAddressClass(\"input-error\");\r\n        }\r\n        if ((comment !== null) && (comment !== \"\")) {\r\n            isValid.push(true);\r\n            setErrorComment(false);\r\n        }\r\n        else {\r\n            isValid.push(false);\r\n            setErrorComment(true);\r\n        }\r\n        if (!isValid.includes(false)) {\r\n            setDisabled(true);\r\n            buttonRef.current.style = 'background-color: #EDEEEF; color: #999999;';\r\n            setTimeout(() => alert(\"Заказ оформлен!\"), 1000);\r\n        }\r\n    }\r\n    const handleChangeName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const handleChangePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n    const handleChangeAddress = (event) => {\r\n        setAddress(event.target.value);\r\n    }\r\n    const handleChangeComment = (event) => {\r\n        setComment(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"input-container\">\r\n                <form>\r\n                    <div className=\"div-input-left display-mobile\">\r\n                        <label className=\"input-label\" htmlFor=\"name\">ФИО\r\n                            <input id=\"name\" onChange={handleChangeName} className={nameClass} placeholder=\"Только кириллица\" />\r\n                        </label>\r\n                        {errorName ? <label className=\"label-error\">ФИО введено неверно, например, \"Иванов Иван Иванович\"</label> : null}\r\n                    </div>\r\n                    <div className=\"div-input-right display-mobile\">\r\n                        <label className=\"input-label\" htmlFor=\"phone\">Телефон\r\n                            <MaskedInput\r\n                                id=\"phone\"\r\n                                mask={['+', '7', '(', /[0-9]/, /[0-9]/, /[0-9]/, ')', ' ', /[0-9]/, /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/, '-', /[0-9]/, /[0-9]/]}\r\n                                className={phoneClass}\r\n                                placeholder=\"+7(___) ___-__-__\"\r\n                                onChange={handleChangePhone}\r\n                            />\r\n                        </label>\r\n                        {errorPhone ? <label className=\"label-error\">Телефон введено неверно, например, \"+7(000) 000-00-00\"</label> : null}\r\n                    </div>\r\n                    <div className=\"div-input\">\r\n                        <label className=\"input-label\" htmlFor=\"address\">Адрес доставки\r\n                            <input id=\"address\" onChange={handleChangeAddress} className={addressClass} placeholder=\"Город, улица, дом\" />\r\n                        </label>\r\n                        {errorAddress ? <label className=\"label-error\">Заполните поле</label> : null}\r\n                    </div>\r\n                    <div className=\"div-input-last\">\r\n                        <label className=\"input-label\" htmlFor=\"comment\">Коментарий\r\n                            <textarea id=\"comment\" onChange={handleChangeComment} className=\"input\" rows={4} />\r\n                        </label>\r\n                        {errorComment ? <label className=\"label-error\">Заполните поле</label> : null}\r\n                    </div>\r\n                    <div className=\"div-confirm-button div-align\">\r\n                        <button\r\n                            onClick={handleClickSubmit}\r\n                            type=\"button\"\r\n                            className=\"confirm-button width-button\"\r\n                            ref={buttonRef}\r\n                            disabled={disabled}\r\n                        >\r\n                            Оформить заказ\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Delivery;","import React, { useState, useRef } from 'react';\r\nimport { YMaps, Map, Placemark } from \"react-yandex-maps\";\r\n\r\nimport './Pickup.css'\r\n\r\nfunction Pickup() {\r\n    let mx = 0.00002138052075270898;\r\n    let zoom = 15;\r\n    const coordinates = [\r\n        [55.981513, 37.162149],\r\n        [55.984904, 37.152149]\r\n    ];\r\n    let sumX = 0;\r\n    let sumY = 0;\r\n    for (let i = 0; i < coordinates.length; i++) {\r\n        sumX += coordinates[i][0];\r\n        sumY += coordinates[i][1];\r\n    }\r\n    let mapData = {\r\n        center: [sumX / coordinates.length, sumY / coordinates.length],\r\n        zoom: 5,\r\n    };\r\n    let flag = [];\r\n    while (zoom !== 1) {\r\n        coordinates.map(c => {\r\n            if ((document.body.clientWidth - 160) * mx > Math.abs(c[1] - mapData.center[1]) && (350 * mx > Math.abs(c[0] - mapData.center[0])))\r\n                flag.push(true);\r\n            else flag.push(false);\r\n        });\r\n        if (flag.includes(false)) {\r\n            zoom--;\r\n            mx *= 2;\r\n            flag = [];\r\n        }\r\n        else break;\r\n    }\r\n    const [choice, setChoice] = useState(null);\r\n    const [error, setError] = useState(false);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const buttonRef = useRef(null);\r\n    mapData.zoom = zoom;\r\n    const handleClickSubmit = (event) => {\r\n        if (choice !== null) {\r\n            setDisabled(true);\r\n            setError(false);\r\n            buttonRef.current.style = 'background-color: #EDEEEF; color: #999999;';\r\n            setTimeout(() => alert(\"Заказ оформлен!\"), 1000);\r\n        }\r\n        else {\r\n            setError(true);\r\n        }\r\n    }\r\n    const handleChangePoint1 = (event) => {\r\n        setChoice(event.target.value);\r\n    }\r\n    const handleChangePoint2 = (event) => {\r\n        setChoice(event.target.value);\r\n    }\r\n    const [isChecked, setCheck] = useState(false);\r\n    const handleClickRadio = (event) => {\r\n        setCheck(!isChecked);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"input-container\">\r\n                <form className=\"form-radio\">\r\n                    <div className=\"div-input-left-radio display-mobile\">\r\n                        <input onChange={handleChangePoint1} id=\"point1\" type=\"radio\" name=\"pointOfOrders\" value=\"Пункт выдачи заказов 1\" />\r\n                        <label htmlFor=\"point1\" className=\"label-orders display-label\">Пункт выдачи заказов 1</label>\r\n                    </div>\r\n                    <div className=\"div-input-right-radio display-mobile\">\r\n                        <input onChange={handleChangePoint2} id=\"point2\" type=\"radio\" name=\"pointOfOrders\" value=\"Пункт выдачи заказов 2\" />\r\n                        <label htmlFor=\"point2\" className=\"label-orders display-label\">Пункт выдачи заказов 2</label>\r\n                    </div>\r\n                    {error ? <label className=\"label-error\">Выберите пункт выдачи заказов</label> : null}\r\n                </form>\r\n                <div className=\"div-input-last\">\r\n                    <YMaps>\r\n                        <Map width={\"100%\"} height={400} defaultState={mapData}>\r\n                            {coordinates.map(coordinate => <Placemark geometry={coordinate} properties={{\r\n                                hintContent: \"Пункт выдачи\",\r\n                                iconCaption: 'Пункт выдачи',\r\n                            }} options={{\r\n                                iconLayout: 'default#image',\r\n                                iconImageHref: 'icon/geo.png',\r\n                                iconImageSize: [33, 39],\r\n                                iconImageOffset: [-17, -39]\r\n                            }}\r\n                            />)}\r\n                        </Map>\r\n                    </YMaps>\r\n                </div>\r\n                <div className=\"div-confirm-button div-align\">\r\n                    <button\r\n                        onClick={handleClickSubmit}\r\n                        className=\"confirm-button width-button\"\r\n                        ref={buttonRef}\r\n                        disabled={disabled}\r\n                    >\r\n                        Оформить заказ\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pickup;","import React, { useState } from 'react';\r\nimport Delivery from \"../../components/Delivery/Delivery\"\r\nimport Pickup from \"../../components/Pickup/Pickup\"\r\nimport './Home.css'\r\n\r\nexport function Home() {\r\n    const [deliveryClass, setDeliveryClass] = useState(\"nav-buttons-active display-nav-buttons\");\r\n    const [pickupClass, setPickupClass] = useState(\"nav-buttons display-nav-buttons\");\r\n    const handleClickDelivery = () => {\r\n        if (deliveryClass === \"nav-buttons display-nav-buttons\") {\r\n            setDeliveryClass(\"nav-buttons-active display-nav-buttons\");\r\n            setPickupClass(\"nav-buttons display-nav-buttons\");\r\n        }\r\n    }\r\n    const handleClickPickup = () => {\r\n        if (pickupClass === \"nav-buttons display-nav-buttons\") {\r\n            setPickupClass(\"nav-buttons-active display-nav-buttons\");\r\n            setDeliveryClass(\"nav-buttons display-nav-buttons\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"div-delivery container-padding\">\r\n                <div>\r\n                    Выберите способ доставки\r\n                </div>\r\n                <div onClick={handleClickDelivery} className={deliveryClass}>\r\n                    Доставка\r\n                </div>\r\n                <div onClick={handleClickPickup} className={pickupClass}>\r\n                    Самовывоз\r\n                </div>\r\n                {deliveryClass === \"nav-buttons-active display-nav-buttons\" ?\r\n                    <Delivery /> : <Pickup/>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './containers/Layout/Layout';\r\nimport { Home } from './containers/HomePage/Home';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}